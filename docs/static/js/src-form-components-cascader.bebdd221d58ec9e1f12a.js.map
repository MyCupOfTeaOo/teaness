{"version":3,"sources":["D:/zouwendi/01projectFiles/teaness/src/Form/Components/Cascader.tsx","D:/zouwendi/01projectFiles/teaness/src/Form/Components/Cascader.mdx"],"names":["Cascader","props","onChange","defaultOptions","options","requestMethod","errorCallback","otherProps","value","unListions","useMemo","Set","useState","setOptions","isChange","setIsChange","loadData","useCallback","selectedOptions","targetOption","length","loading","p","add","then","resp","children","prevOptions","error","console","split","reduce","prevValues","curValue","push","undefined","useEffect","Array","from","forEach","cp","cancel","isArray","depthLoad","i","find","item","handle","v","layoutProps","MDXLayout","MDXContent","components","mdxType","parentName","__position","__code","__scope","this","Playground","Props","__codesandbox","setValue","label","isLeaf","of","isMDXComponent"],"mappings":"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","file":"static/js/src-form-components-cascader.56dbb065.js","sourcesContent":["import React, {\n  useState,\n  useCallback,\n  useMemo,\n  useEffect,\n  Dispatch,\n  SetStateAction,\n} from 'react';\nimport { Cascader as AntCascader } from 'antd';\nimport {\n  CascaderProps as AntCascaderProps,\n  CascaderOptionType,\n} from 'antd/lib/cascader';\n\nexport type CancellablePromise<T> = Promise<T> & {\n  cancel(): void;\n};\n\nexport interface CascaderProps\n  extends Omit<AntCascaderProps, 'options' | 'value' | 'onChange'> {\n  requestMethod?: (\n    fatherCode?: string,\n  ) => CancellablePromise<CascaderOptionType[]>;\n  /** 可选项数据源 */\n  options?: CascaderOptionType[];\n  value?: string;\n  errorCallback?: (error: any, target?: CascaderOptionType[] | string) => void;\n  onChange?: (\n    value: string | undefined,\n    selectedOptions?: CascaderOptionType[],\n  ) => void;\n}\n\nconst depthLoad = (\n  i: number,\n  value: string[],\n  unListions: Set<CancellablePromise<CascaderOptionType[]>>,\n  requestMethod: (\n    fatherCode?: string,\n  ) => CancellablePromise<CascaderOptionType[]>,\n  setOptions: Dispatch<SetStateAction<CascaderOptionType[] | undefined>>,\n  errorCallback: any,\n  options?: CascaderOptionType[],\n) => {\n  if (options && value.length > i) {\n    const curValue = value[i - 1];\n    const targetOption = options.find(item => item.value === curValue);\n    if (targetOption) {\n      // 已经加载\n      if (targetOption.children) {\n        depthLoad(\n          i + 1,\n          value,\n          unListions,\n          requestMethod,\n          setOptions,\n          errorCallback,\n          targetOption.children,\n        );\n      } else {\n        // 还没有加载\n        const p = requestMethod(curValue);\n        unListions.add(p);\n        p.then(resp => {\n          targetOption.loading = false;\n          targetOption.children = resp;\n          setOptions(prevOptions => {\n            if (prevOptions) return [...prevOptions];\n          });\n        })\n          .catch(error => {\n            if (errorCallback) {\n              errorCallback(error, curValue);\n            } else console.error(error);\n          })\n          .finally(() => {\n            unListions.delete(p);\n          });\n      }\n    }\n  }\n};\n\nconst Cascader: React.FC<CascaderProps> = props => {\n  const {\n    onChange,\n    options: defaultOptions,\n    requestMethod,\n    errorCallback,\n    value: source,\n    ...otherProps\n  } = props;\n  const unListions = useMemo<Set<CancellablePromise<CascaderOptionType[]>>>(\n    () => new Set(),\n    [],\n  );\n  const [options, setOptions] = useState(defaultOptions);\n  const [isChange, setIsChange] = useState(false);\n  const loadData = useCallback(\n    (selectedOptions?: CascaderOptionType[]) => {\n      if (selectedOptions) {\n        const targetOption = selectedOptions[selectedOptions.length - 1];\n        targetOption.loading = true;\n        if (requestMethod) {\n          const p = requestMethod(targetOption.value);\n          unListions.add(p);\n          p.then(resp => {\n            targetOption.loading = false;\n            targetOption.children = resp;\n            setOptions(prevOptions => {\n              if (prevOptions) return [...prevOptions];\n            });\n          })\n            .catch(error => {\n              if (errorCallback) {\n                errorCallback(error, selectedOptions);\n              } else console.error(error);\n            })\n            .finally(() => {\n              unListions.delete(p);\n            });\n        }\n      }\n    },\n    [requestMethod],\n  );\n\n  const value = useMemo<string[] | undefined>(\n    () =>\n      (props.value\n        ? props.value.split('-').reduce<string[]>((prevValues, curValue) => {\n            if (prevValues.length > 0) {\n              prevValues.push(\n                `${prevValues[prevValues.length - 1]}-${curValue}`,\n              );\n            } else {\n              prevValues.push(curValue);\n            }\n            return prevValues;\n          }, [])\n        : undefined),\n    [props.value],\n  );\n  useEffect(() => {\n    if (requestMethod) {\n      const p = requestMethod();\n      unListions.add(p);\n      p.then(resp => setOptions(resp))\n        .catch(error => {\n          if (errorCallback) {\n            errorCallback(error);\n          } else console.error(error);\n        })\n        .finally(() => {\n          unListions.delete(p);\n        });\n    }\n    return () => {\n      Array.from(unListions).forEach(cp => {\n        cp.cancel();\n      });\n    };\n  }, [requestMethod]);\n\n  useEffect(() => {\n    if (!isChange && requestMethod) {\n      if (options && Array.isArray(value) && value.length > 1) {\n        depthLoad(\n          1,\n          value,\n          unListions,\n          requestMethod,\n          setOptions,\n          errorCallback,\n          options,\n        );\n      }\n    }\n  }, [options, value]);\n\n  const handle = useCallback(\n    (v: string[], selectedOptions?: CascaderOptionType[]) => {\n      setIsChange(true);\n      if (onChange) {\n        if (v.length > 0) {\n          onChange(v[v.length - 1], selectedOptions);\n        } else {\n          onChange(undefined, selectedOptions);\n        }\n      }\n    },\n    [onChange],\n  );\n\n  return (\n    <AntCascader\n      value={value}\n      onChange={handle}\n      options={options}\n      loadData={loadData}\n      {...otherProps}\n    />\n  );\n};\n\nexport default Cascader;\n","\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\n\n/* @jsx mdx */\nimport { Playground, Props } from 'docz';\nimport { useState } from 'react';\nimport 'antd/dist/antd.css';\nimport Cascader from './Cascader';\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <h1 {...{\n      \"id\": \"cascader选择器\"\n    }}>{`Cascader(选择器)`}</h1>\n    <p>{`antd `}<a parentName=\"p\" {...{\n        \"href\": \"https://ant.design/components/Cascader-cn/\"\n      }}>{`Cascader`}</a>{` 差不多`}</p>\n    <h2 {...{\n      \"id\": \"基本用法basic-usage\"\n    }}>{`基本用法(Basic usage)`}</h2>\n    <Playground __position={0} __code={'() => {\\n  const [value, setValue] = useState(undefined)\\n  return (\\n    <div>\\n      <Cascader\\n        onChange={setValue}\\n        value={value}\\n        options={[\\n          {\\n            label: \\'江苏省\\',\\n            value: \\'32\\',\\n            isLeaf: false,\\n            children: [\\n              {\\n                label: \\'南京市\\',\\n                value: \\'32-01\\',\\n                isLeaf: false,\\n                children: [\\n                  {\\n                    label: \\'市辖区\\',\\n                    value: \\'32-01-01\\',\\n                    isLeaf: true,\\n                  },\\n                ],\\n              },\\n            ],\\n          },\\n          {\\n            label: \\'广西省\\',\\n            value: \\'54\\',\\n            isLeaf: false,\\n            children: [\\n              {\\n                label: \\'柳州市\\',\\n                value: \\'54-50\\',\\n                isLeaf: false,\\n                children: [\\n                  {\\n                    label: \\'城中区\\',\\n                    value: \\'54-50-00\\',\\n                    isLeaf: true,\\n                  },\\n                ],\\n              },\\n            ],\\n          },\\n        ]}\\n      />\\n    </div>\\n  )\\n}'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Props,\n      useState,\n      Cascader\n    }} __codesandbox={`undefined`} mdxType=\"Playground\">\n  {() => {\n        const [value, setValue] = useState(undefined);\n        return <div>\n        <Cascader onChange={setValue} value={value} options={[{\n            label: '江苏省',\n            value: '32',\n            isLeaf: false,\n            children: [{\n              label: '南京市',\n              value: '32-01',\n              isLeaf: false,\n              children: [{\n                label: '市辖区',\n                value: '32-01-01',\n                isLeaf: true\n              }]\n            }]\n          }, {\n            label: '广西省',\n            value: '54',\n            isLeaf: false,\n            children: [{\n              label: '柳州市',\n              value: '54-50',\n              isLeaf: false,\n              children: [{\n                label: '城中区',\n                value: '54-50-00',\n                isLeaf: true\n              }]\n            }]\n          }]} mdxType=\"Cascader\" />\n      </div>;\n      }}\n    </Playground>\n    <blockquote>\n      <p parentName=\"blockquote\">{`此外还支持 `}<inlineCode parentName=\"p\">{`requestMethod`}</inlineCode>{` 方法 需要一个 `}<inlineCode parentName=\"p\">{`() => CancellablePromise<CascaderOptionType[]>`}</inlineCode>{`这样的方法\n会自动请求 `}<inlineCode parentName=\"p\">{`requestMethod`}</inlineCode>{` 加载 `}<inlineCode parentName=\"p\">{`options`}</inlineCode></p>\n      <pre parentName=\"blockquote\"><code parentName=\"pre\" {...{\n          \"className\": \"language-ts\"\n        }}>{`interface CascaderOptionType {\n    value?: string;\n    label?: React.ReactNode;\n    disabled?: boolean;\n    isLeaf?: boolean;\n    loading?: boolean;\n    children?: Array<CascaderOptionType>;\n`}</code></pre>\n    </blockquote>\n    <pre><code parentName=\"pre\" {...{}}>{`[key: string]: any;\n`}</code></pre>\n    <p>{`}`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`\n\\`\\`\\`ts\ntype CancellablePromise<T> = Promise<T> & {\n  cancel(): void;\n};\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"属性properties\"\n    }}>{`属性(Properties)`}</h2>\n    <Props of={Cascader} mdxType=\"Props\" />\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"],"sourceRoot":""}