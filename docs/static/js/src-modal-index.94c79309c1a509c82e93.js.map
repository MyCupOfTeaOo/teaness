{"version":3,"sources":["D:/zouwendi/01projectFiles/teaness/src/Modal/index.mdx","D:/zouwendi/01projectFiles/teaness/src/Modal/index.tsx"],"names":["layoutProps","MDXLayout","MDXContent","components","props","mdxType","of","Modal","parentName","isMDXComponent","open","ModalComponent","params","div","document","createElement","isCancel","onOk","args2","onCancel","args","render","visible","Promise","resolve","setTimeout","destory","ReactDOM","unmountComponentAtNode","parentNode","removeChild","body","appendChild","context","AModal","error","centered","success","confirm","warning"],"mappings":"sbAaMA,EAAc,GAGdC,EAAY,UACH,SAASC,EAAT,GAGX,IAFFC,EAEC,EAFDA,WACGC,EACF,8BACD,OAAO,YAACH,EAAD,iBAAeD,EAAiBI,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAE5E,iBAAQ,CACN,GAAM,2BADR,6BAGA,iBAAQ,CACN,GAAM,0BADR,4BAGA,YAAC,QAAD,CAAOC,GAAIC,IAAOF,QAAQ,UAC1B,iBAAQ,CACN,GAAM,uCADR,yCAGA,oCAAS,+BAAGG,WAAW,KAAQ,CAC3B,KAAQ,4CADH,cAAT,4F,2KAOJN,EAAWO,gBAAiB,G,uwCC7BrB,SAASC,EACdC,EACAC,GAEA,IAAMC,EAAMC,SAASC,cAAc,OAC/BC,GAAW,EAEf,SAASC,IAAuB,IAAD,uBAAdC,EAAc,yBAAdA,EAAc,gBACzBN,EAAOK,MAAML,EAAOK,KAAKC,GAC7BC,IAEF,SAASA,IAA0B,IAAD,uBAAbC,EAAa,yBAAbA,EAAa,gBAKhC,OAJIR,EAAOO,UAAUP,EAAOO,SAASC,GAErCC,EAAO,EAAD,GAAMT,EAAN,CAAcO,WAAUF,OAAMK,SAAS,KAC7CN,GAAW,EACJ,IAAIO,SAAQ,SAAAC,GAAO,OACxBC,YAAW,WACTC,IACAF,GAAQ,KACP,QAGP,SAASE,IACHV,EACoBW,IAASC,uBAAuBf,IACjCA,EAAIgB,YACvBhB,EAAIgB,WAAWC,YAAYjB,GAG7BM,IAGJ,SAASE,EAAOjB,GACduB,IAASN,OAAO,kBAACV,EAAmBP,GAAWS,GAGjD,OA/BAC,SAASiB,KAAKC,YAAYnB,GA8B1BQ,EAAO,EAAD,GAAMT,EAAN,CAAcO,WAAUF,OAAMK,SAAS,KACtC,CACLD,SACAF,WACAO,W,yKAIEnB,E,YAIJ,WAAYH,EAAmB6B,GAAc,qEACrC7B,EAAO6B,I,2BALGC,KAAd3B,EACGG,KAAO,SAACN,GAAD,OACZM,EAAKH,EAAOH,IAOhBG,EAAM4B,MAAQ,SAAA/B,GAAK,OAAI8B,IAAOC,MAAP,GAAeC,UAAU,GAAShC,KACzDG,EAAM8B,QAAU,SAAAjC,GAAK,OAAI8B,IAAOG,QAAP,GAAiBD,UAAU,GAAShC,KAC7DG,EAAM+B,QAAU,SAAAlC,GAAK,OAAI8B,IAAOI,QAAP,GAAiBF,UAAU,GAAShC,KAC7DG,EAAMgC,QAAU,SAAAnC,GAAK,OAAI8B,IAAOK,QAAP,GAAiBH,UAAU,GAAShC,KAE9CG,M","file":"static/js/src-modal-index.68e43b3a.js","sourcesContent":["\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\n\n/* @jsx mdx */\nimport { Playground, Props } from 'docz';\nimport Modal from './';\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <h1 {...{\n      \"id\": \"modal模态窗\"\n    }}>{`Modal(模态窗)`}</h1>\n    <h2 {...{\n      \"id\": \"属性properties\"\n    }}>{`属性(Properties)`}</h2>\n    <Props of={Modal} mdxType=\"Props\" />\n    <h2 {...{\n      \"id\": \"基本用法basic-usage\"\n    }}>{`基本用法(Basic usage)`}</h2>\n    <p>{`参考`}<a parentName=\"p\" {...{\n        \"href\": \"https://ant.design/components/modal-cn/\"\n      }}>{`antd modal`}</a>{`(注:只是浮动位置默认改成了居中)`}</p>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;","import { Modal as AModal } from 'antd';\nimport { ModalProps } from 'antd/lib/modal';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\ninterface OpenBase {\n  visible?: boolean;\n  onCancel?: (...args: any[]) => void | Promise<any>;\n  onOk?: (...args: any[]) => void | Promise<any>;\n}\n\nexport function open<T extends OpenBase>(\n  ModalComponent: React.ComponentType<T>,\n  params: T,\n) {\n  const div = document.createElement('div');\n  let isCancel = false;\n  document.body.appendChild(div);\n  function onOk(...args2: any[]) {\n    if (params.onOk) params.onOk(args2);\n    onCancel();\n  }\n  function onCancel(...args: any[]) {\n    if (params.onCancel) params.onCancel(args);\n\n    render({ ...params, onCancel, onOk, visible: false });\n    isCancel = true;\n    return new Promise(resolve =>\n      setTimeout(() => {\n        destory();\n        resolve(true);\n      }, 200),\n    );\n  }\n  function destory() {\n    if (isCancel) {\n      const unmountResult = ReactDOM.unmountComponentAtNode(div);\n      if (unmountResult && div.parentNode) {\n        div.parentNode.removeChild(div);\n      }\n    } else {\n      onCancel();\n    }\n  }\n  function render(props: T) {\n    ReactDOM.render(<ModalComponent {...props} />, div);\n  }\n  render({ ...params, onCancel, onOk, visible: true });\n  return {\n    render,\n    onCancel,\n    destory,\n  };\n}\n\nclass Modal extends AModal {\n  static open = (props: ModalProps & { children?: React.ReactNode }) =>\n    open(Modal, props);\n\n  constructor(props: ModalProps, context: {}) {\n    super(props, context);\n  }\n}\n\nModal.error = props => AModal.error({ centered: true, ...props });\nModal.success = props => AModal.success({ centered: true, ...props });\nModal.confirm = props => AModal.confirm({ centered: true, ...props });\nModal.warning = props => AModal.warning({ centered: true, ...props });\n\nexport default Modal;\n"],"sourceRoot":""}