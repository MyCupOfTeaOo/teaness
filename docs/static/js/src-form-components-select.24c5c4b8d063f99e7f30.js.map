{"version":3,"sources":["D:/zouwendi/01projectFiles/teaness/src/Form/Components/Select.mdx","D:/zouwendi/01projectFiles/teaness/src/Form/Components/Select.tsx"],"names":["layoutProps","MDXLayout","MDXContent","components","props","mdxType","parentName","__position","__code","__scope","this","Playground","Props","useState","Select","__codesandbox","undefined","value","setValue","onChange","Option","options","label","of","isMDXComponent","defaultOptions","requestMethod","errorCallback","otherProps","setOptions","children","useMemo","Array","isArray","map","item","key","useEffect","req","then","items","error","console","cancel","className","classnames","AntSelect","OptGroup","defaultProps","placeholder"],"mappings":"0lBAeMA,EAAc,GAGdC,EAAY,UACH,SAASC,EAAT,GAGX,IAFFC,EAEC,EAFDA,WACGC,EACF,8BACD,OAAO,YAACH,EAAD,iBAAeD,EAAiBI,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAE5E,iBAAQ,CACN,GAAM,4BADR,8BAGA,6BAAY,+BAAGC,WAAW,KAAQ,CAC9B,KAAQ,6CADA,UAAZ,gMAIA,iBAAQ,CACN,GAAM,uCADR,yCAGA,YAAC,aAAD,CAAYC,WAAY,EAAGC,OAAQ,wiBAAieC,QAAS,CAC3gBL,MAAOM,KAAOA,KAAKN,MAAQA,EAC3BO,wBACAC,cACAC,oBACAC,YACCC,cAAa,YAAeV,QAAQ,eACxC,WAAO,IAAD,EACyBQ,wBAASG,GADlC,mBACMC,EADN,KACaC,EADb,KAED,OAAO,uBACP,YAAC,IAAD,CAAQC,SAAUD,EAAUD,MAAOA,EAAOZ,QAAQ,UAChD,YAAC,IAAOe,OAAR,CAAeH,MAAM,gBAArB,gBACA,YAAC,IAAOG,OAAR,CAAeH,MAAM,gBAArB,iBAEF,YAAC,IAAD,CAAQE,SAAUD,EAAUD,MAAOA,EAAOI,QAAS,CAAC,CAChDC,MAAO,eACPL,MAAO,gBACN,CACDK,MAAO,eACPL,MAAO,iBACLZ,QAAQ,eAIlB,8BACE,iBAAGC,WAAW,cAAd,kCAAqC,0BAAYA,WAAW,KAAvB,iBAArC,0CAA2G,0BAAYA,WAAW,KAAvB,6DAA3G,kEACE,0BAAYA,WAAW,KAAvB,iBADF,iBACmE,0BAAYA,WAAW,KAAvB,aAErE,uBAAK,kCAAMA,WAAW,OAAU,CAC5B,UAAa,gBADZ,yEAML,iBAAQ,CACN,GAAM,0BADR,4BAGA,YAAC,QAAD,CAAOiB,GAAIT,IAAQT,QAAQ,W,uLAK/BH,EAAWsB,gBAAiB,G,giCCzD5B,IAAMV,EAGF,SAAAV,GAAU,IAEVe,EAMEf,EANFe,SACAF,EAKEb,EALFa,MACSQ,EAIPrB,EAJFiB,QACAK,EAGEtB,EAHFsB,cACAC,EAEEvB,EAFFuB,cACGC,EAPM,YAQPxB,EARO,kEASmBS,mBAASY,GAT5B,mBASJJ,EATI,KASKQ,EATL,KAULC,EAAWC,mBACf,kBACE3B,EAAM0B,WACLE,MAAMC,QAAQZ,GACXA,EAAQa,KAAI,SAAAC,GAAI,OACd,kBAAC,IAAUf,OAAX,CAAkBgB,IAAKD,EAAKlB,MAAOA,MAAOkB,EAAKlB,OAC5CkB,EAAKb,eAGVN,KACN,CAACZ,EAAM0B,SAAUT,IAsBnB,OApBAgB,qBAAU,WACR,IAAIC,EAaJ,OAZIZ,GACFY,EAAMZ,KAEHa,MAAK,SAAAC,GAAK,OAAIX,EAAWW,MAD5B,OAES,SAAAC,GACDd,EACFA,EAAcc,GACTC,QAAQD,MAAMA,MAGzBZ,EAAWJ,GAEN,WACDa,GACFA,EAAIK,YAGP,CAACjB,IAEF,kBAAC,IAAD,eACEkB,UAAWC,IAAW,aAAczC,EAAMwC,YACtChB,EAFN,CAGET,SAAUA,EACVF,MAAOA,IAENa,I,qQAOPhB,EAAOM,OAAS0B,IAAU1B,OAC1BN,EAAOiC,SAAWD,IAAUC,SAC5BjC,EAAOkC,aAAe,CACpB3B,QAAS,GACT4B,YAAa,sBAEAnC,M","file":"static/js/src-form-components-select.1a1bf531.js","sourcesContent":["\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\n\n/* @jsx mdx */\nimport { Playground, Props } from 'docz';\nimport { useState } from 'react';\nimport 'antd/dist/antd.css';\nimport Select from './Select';\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <h1 {...{\n      \"id\": \"select选择器\"\n    }}>{`Select(选择器)`}</h1>\n    <p>{`antd `}<a parentName=\"p\" {...{\n        \"href\": \"https://ant.design/components/select-cn/\"\n      }}>{`Select`}</a>{` 差不多\n这是一个完全受控的组件,也就是不处理 onchange value 选择不会有任何用`}</p>\n    <h2 {...{\n      \"id\": \"基本用法basic-usage\"\n    }}>{`基本用法(Basic usage)`}</h2>\n    <Playground __position={0} __code={'() => {\\n  const [value, setValue] = useState(undefined)\\n  return (\\n    <div>\\n      <Select onChange={setValue} value={value}>\\n        <Select.Option value=\\\"清华\\\">清华</Select.Option>\\n        <Select.Option value=\\\"北大\\\">北大</Select.Option>\\n      </Select>\\n      <Select\\n        onChange={setValue}\\n        value={value}\\n        options={[\\n          { label: \\'清华\\', value: \\'清华\\' },\\n          { label: \\'北大\\', value: \\'北大\\' },\\n        ]}\\n      />\\n    </div>\\n  )\\n}'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Props,\n      useState,\n      Select\n    }} __codesandbox={`undefined`} mdxType=\"Playground\">\n  {() => {\n        const [value, setValue] = useState(undefined);\n        return <div>\n        <Select onChange={setValue} value={value} mdxType=\"Select\">\n          <Select.Option value=\"清华\">清华</Select.Option>\n          <Select.Option value=\"北大\">北大</Select.Option>\n        </Select>\n        <Select onChange={setValue} value={value} options={[{\n            label: '清华',\n            value: '清华'\n          }, {\n            label: '北大',\n            value: '北大'\n          }]} mdxType=\"Select\" />\n      </div>;\n      }}\n    </Playground>\n    <blockquote>\n      <p parentName=\"blockquote\">{`此外还支持 `}<inlineCode parentName=\"p\">{`requestMethod`}</inlineCode>{` 方法 需要一个 `}<inlineCode parentName=\"p\">{`() => CancellablePromise<{ label: string; value: any }[]>`}</inlineCode>{`这样的方法\n会自动请求 `}<inlineCode parentName=\"p\">{`requestMethod`}</inlineCode>{` 加载 `}<inlineCode parentName=\"p\">{`options`}</inlineCode></p>\n    </blockquote>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-ts\"\n      }}>{`type CancellablePromise<T> = Promise<T> & {\n  cancel(): void;\n};\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"属性properties\"\n    }}>{`属性(Properties)`}</h2>\n    <Props of={Select} mdxType=\"Props\" />\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;","import React, { useState, useMemo, useEffect } from 'react';\nimport { Select as AntSelect } from 'antd';\nimport {\n  SelectProps as AntSelectProps,\n  OptionProps,\n  OptGroupProps,\n} from 'antd/lib/select';\nimport classnames from 'classnames';\nimport './styles/select.scss';\n\nexport type CancellablePromise<T> = Promise<T> & {\n  cancel(): void;\n};\n\nexport interface SelectProps extends AntSelectProps {\n  requestMethod?: () => CancellablePromise<{ label: string; value: any }[]>;\n  errorCallback?: (error: any) => void;\n  options?: { label: string; value: any }[];\n}\n\nconst Select: React.FC<SelectProps> & {\n  Option: React.ClassicComponentClass<OptionProps>;\n  OptGroup: React.ClassicComponentClass<OptGroupProps>;\n} = props => {\n  const {\n    onChange,\n    value,\n    options: defaultOptions,\n    requestMethod,\n    errorCallback,\n    ...otherProps\n  } = props;\n  const [options, setOptions] = useState(defaultOptions);\n  const children = useMemo(\n    () =>\n      props.children ||\n      (Array.isArray(options)\n        ? options.map(item => (\n            <AntSelect.Option key={item.value} value={item.value}>\n              {item.label}\n            </AntSelect.Option>\n          ))\n        : undefined),\n    [props.children, options],\n  );\n  useEffect(() => {\n    let req: CancellablePromise<{ label: string; value: any }[]>;\n    if (requestMethod) {\n      req = requestMethod();\n      req\n        .then(items => setOptions(items))\n        .catch(error => {\n          if (errorCallback) {\n            errorCallback(error);\n          } else console.error(error);\n        });\n    } else {\n      setOptions(defaultOptions);\n    }\n    return () => {\n      if (req) {\n        req.cancel();\n      }\n    };\n  }, [requestMethod]);\n  return (\n    <AntSelect\n      className={classnames('tea-select', props.className)}\n      {...otherProps}\n      onChange={onChange}\n      value={value}\n    >\n      {children}\n    </AntSelect>\n  );\n};\n\nexport type SelectType = React.FC<SelectProps>;\n\nSelect.Option = AntSelect.Option;\nSelect.OptGroup = AntSelect.OptGroup;\nSelect.defaultProps = {\n  options: [],\n  placeholder: '请选择',\n};\nexport default Select;\n"],"sourceRoot":""}