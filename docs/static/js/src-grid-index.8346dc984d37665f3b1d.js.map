{"version":3,"sources":["D:/zouwendi/01projectFiles/teaness/src/Grid/Col.tsx","D:/zouwendi/01projectFiles/teaness/src/Grid/Context.ts","D:/zouwendi/01projectFiles/teaness/src/Grid/index.mdx","D:/zouwendi/01projectFiles/teaness/src/Grid/Row.tsx","D:/zouwendi/01projectFiles/teaness/src/Grid/index.ts"],"names":["Col","props","context","useContext","RowContext","colProps","React","createContext","layoutProps","MDXLayout","MDXContent","components","mdxType","parentName","of","Row","__position","__code","__scope","this","Playground","Props","Button","__codesandbox","span","isMDXComponent","rest","Provider","value"],"mappings":"4GAAA,0HAKMA,EAA0B,SAAAC,GAC9B,IAAMC,EAAUC,qBAAWC,KAC3B,OAAO,kBAAC,IAAD,iBAAYF,EAAQG,SAAcJ,KAG5BD,M,uNCVf,2EAGaI,EAHb,OAG0BE,EAAMC,cAAuC,I,opBCYjEC,EAAc,GAGdC,EAAY,UACH,SAASC,EAAT,GAGX,IAFFC,EAEC,EAFDA,WACGV,EACF,8BACD,OAAO,YAACQ,EAAD,iBAAeD,EAAiBP,EAAhC,CAAuCU,WAAYA,EAAYC,QAAQ,cAE5E,iBAAQ,CACN,GAAM,oBADR,sBAGA,2JACA,iBAAQ,CACN,GAAM,0BADR,4BAGA,oCAAS,+BAAGC,WAAW,KAAQ,CAC3B,KAAQ,2CADH,cAGT,iBAAQ,CACN,GAAM,OADR,OAGA,YAAC,QAAD,CAAOC,GAAIC,IAAKH,QAAQ,UACxB,oPACA,iBAAQ,CACN,GAAM,OADR,OAGA,YAAC,QAAD,CAAOE,GAAId,IAAKY,QAAQ,UACxB,iBAAQ,CACN,GAAM,uCADR,yCAGA,YAAC,aAAD,CAAYI,WAAY,EAAGC,OAAQ,qJAAsJC,QAAS,CAChMjB,MAAOkB,KAAOA,KAAKlB,MAAQA,EAC3BmB,wBACAC,cACAC,WACAP,QACAf,SACCuB,cAAa,YAAeX,QAAQ,cACzC,YAAC,IAAD,CAAKP,SAAU,CACTmB,KAAM,GACLZ,QAAQ,OACb,YAAC,IAAD,CAAKA,QAAQ,OAAb,cACA,YAAC,IAAD,CAAKA,QAAQ,OAAb,cACA,YAAC,IAAD,CAAKY,KAAM,GAAIZ,QAAQ,OAAvB,cACA,YAAC,IAAD,CAAKA,QAAQ,OAAb,iB,0KAOJF,EAAWe,gBAAiB,G,uTC/DtBV,EAA0B,SAAAd,GAAU,IAChCI,EAAsBJ,EAAtBI,SAAaqB,EADkB,YACTzB,EADS,cAEvC,OACE,kBAAC,IAAW0B,SAAZ,CACEC,MAAO,CACLvB,aAGF,kBAAC,IAAWqB,KAKHX,I,iKClBf,sE","file":"static/js/src-grid-index.e573a2a3.js","sourcesContent":["import React, { useContext } from 'react';\nimport { Col as AntCol } from 'antd';\nimport { ColProps } from './typings';\nimport { RowContext } from './Context';\n\nconst Col: React.FC<ColProps> = props => {\n  const context = useContext(RowContext);\n  return <AntCol {...context.colProps} {...props} />;\n};\n\nexport default Col;\n","import React from 'react';\nimport { ColProps } from './typings';\n\nexport const RowContext = React.createContext<{ colProps?: ColProps }>({});\n","\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\n\n/* @jsx mdx */\nimport { Playground, Props } from 'docz';\nimport { Button } from 'antd';\nimport 'antd/dist/antd.css';\nimport { Row, Col } from './';\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <h1 {...{\n      \"id\": \"grid栅格\"\n    }}>{`Grid(栅格)`}</h1>\n    <p>{`对 antd Grid 的二次封装,主要支持 Row 传入 ColProps 传入 Col 的 context`}</p>\n    <h2 {...{\n      \"id\": \"属性properties\"\n    }}>{`属性(Properties)`}</h2>\n    <p>{`参考`}<a parentName=\"p\" {...{\n        \"href\": \"https://ant.design/components/grid-cn/\"\n      }}>{`antd grid`}</a></p>\n    <h3 {...{\n      \"id\": \"row\"\n    }}>{`Row`}</h3>\n    <Props of={Row} mdxType=\"Props\" />\n    <p>{`Row 比 antd Row 增加了一个可选参数 colProps 即 antd Col 的所有属性,会传给 Col 然是可以被 Col 的属性覆盖`}</p>\n    <h3 {...{\n      \"id\": \"col\"\n    }}>{`Col`}</h3>\n    <Props of={Col} mdxType=\"Props\" />\n    <h2 {...{\n      \"id\": \"基本用法basic-usage\"\n    }}>{`基本用法(Basic usage)`}</h2>\n    <Playground __position={2} __code={'<Row colProps={{ span: 8 }}>\\n  <Col>1111111111</Col>\\n  <Col>1111111111</Col>\\n  <Col span={24}>1111111111</Col>\\n  <Col>1111111111</Col>\\n</Row>'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Props,\n      Button,\n      Row,\n      Col\n    }} __codesandbox={`undefined`} mdxType=\"Playground\">\n  <Row colProps={{\n        span: 8\n      }} mdxType=\"Row\">\n    <Col mdxType=\"Col\">1111111111</Col>\n    <Col mdxType=\"Col\">1111111111</Col>\n    <Col span={24} mdxType=\"Col\">1111111111</Col>\n    <Col mdxType=\"Col\">1111111111</Col>\n  </Row>\n    </Playground>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;","import React from 'react';\nimport { Row as AntRow } from 'antd';\nimport { RowProps } from './typings';\nimport { RowContext } from './Context';\n\nconst Row: React.FC<RowProps> = props => {\n  const { colProps, ...rest } = props;\n  return (\n    <RowContext.Provider\n      value={{\n        colProps,\n      }}\n    >\n      <AntRow {...rest} />\n    </RowContext.Provider>\n  );\n};\n\nexport default Row;\n","import Col from './Col';\nimport Row from './Row';\n\nexport { Row, Col };\n"],"sourceRoot":""}