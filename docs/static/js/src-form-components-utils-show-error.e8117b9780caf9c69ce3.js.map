{"version":3,"sources":["D:/zouwendi/01projectFiles/teaness/src/Form/Components/Utils/ShowError.mdx","D:/zouwendi/01projectFiles/teaness/src/Form/Components/Utils/ShowError.tsx"],"names":["layoutProps","MDXLayout","MDXContent","components","props","mdxType","__position","__code","__scope","this","Playground","Props","ShowError","Input","__codesandbox","error","message","of","parentName","isMDXComponent","errMessage","useMemo","map","item","join","className","classnames","formErrorLayout","children","ShowErrorHoc","Component","errors","rest"],"mappings":"mjBAeMA,EAAc,GAGdC,EAAY,UACH,SAASC,EAAT,GAGX,IAFFC,EAEC,EAFDA,WACGC,EACF,8BACD,OAAO,YAACH,EAAD,iBAAeD,EAAiBI,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAE5E,iBAAQ,CACN,GAAM,qCADR,uCAGA,iBAAQ,CACN,GAAM,uCADR,yCAGA,YAAC,aAAD,CAAYC,WAAY,EAAGC,OAAQ,uGAA4EC,QAAS,CACtHJ,MAAOK,KAAOA,KAAKL,MAAQA,EAC3BM,wBACAC,cACAC,cACAC,WACCC,cAAa,YAAeT,QAAQ,cACzC,YAAC,IAAD,CAAWU,MAAO,CAAC,CACbC,QAAS,yCACPX,QAAQ,aACd,YAAC,IAAD,CAAOA,QAAQ,YAGf,iBAAQ,CACN,GAAM,0BADR,4BAGA,YAAC,QAAD,CAAOY,GAAIL,IAAWP,QAAQ,UAC9B,8BACE,iBAAGa,WAAW,cAAd,iEAGF,iDACA,uBAAK,kCAAMA,WAAW,OAAU,CAC5B,UAAa,iBADZ,6H,iMAUThB,EAAWiB,gBAAiB,G,gUCpDtBP,G,6CAAsC,SAAAR,GAC1C,IAAMgB,EAAaC,mBACjB,kBACGjB,EAAMW,MACHX,EAAMW,MAAMO,KAAI,SAAAC,GAAI,OAAIA,EAAKP,WAASQ,KAAK,KAC3CpB,EAAMW,QACZ,CAACX,EAAMW,QAET,OACE,yBACEU,UAAWC,IACT,CAAEC,kBAAmBvB,EAAMW,OAC3BX,EAAMqB,YAGPrB,EAAMwB,SACP,yBAAKH,UAAU,wBAAwBL,MAKtC,SAASS,EACdC,GAUA,OAR0B,SAAC1B,GAAc,IAAD,EACVA,EAApB2B,EAD8B,EAC9BA,OAAWC,EADmB,0BAEtC,OACE,kBAACpB,EAAD,CAAWG,MAAOgB,GAChB,kBAACD,EAAeE,K,mMAOTpB,M","file":"static/js/src-form-components-utils-show-error.c659a22b.js","sourcesContent":["\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\n\n/* @jsx mdx */\nimport { Playground, Props } from 'docz';\nimport 'antd/dist/antd.css';\nimport ShowError from './ShowError';\nimport { Input } from 'antd';\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <h1 {...{\n      \"id\": \"showerror错误信息\"\n    }}>{`ShowError(错误信息)`}</h1>\n    <h2 {...{\n      \"id\": \"基本用法basic-usage\"\n    }}>{`基本用法(Basic usage)`}</h2>\n    <Playground __position={0} __code={'<ShowError error={[{ message: \\'这是错误信息\\' }]}>\\n  <Input />\\n</ShowError>'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Props,\n      ShowError,\n      Input\n    }} __codesandbox={`undefined`} mdxType=\"Playground\">\n  <ShowError error={[{\n        message: '这是错误信息'\n      }]} mdxType=\"ShowError\">\n    <Input mdxType=\"Input\" />\n  </ShowError>\n    </Playground>\n    <h2 {...{\n      \"id\": \"属性properties\"\n    }}>{`属性(Properties)`}</h2>\n    <Props of={ShowError} mdxType=\"Props\" />\n    <blockquote>\n      <p parentName=\"blockquote\">{`此外还提供一个 HOC\nShowErrorHOC`}</p>\n    </blockquote>\n    <p>{`使用方法`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-tsx\"\n      }}>{`import { Input } from 'teaness';\nimport { ShowErrorHoc } from 'teaness';\nconst InputHasError = ShowErrorHoc(Input);\n`}</code></pre>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;","import React, { useMemo } from 'react';\nimport classnames from 'classnames';\nimport { ErrorMessage } from '../../typings';\nimport './styles.scss';\n\ninterface ShowErrorProps {\n  children: React.ReactNode;\n  error?: ErrorMessage[];\n  className?: React.CSSProperties;\n}\n\nconst ShowError: React.FC<ShowErrorProps> = props => {\n  const errMessage = useMemo(\n    () =>\n      (props.error\n        ? props.error.map(item => item.message).join(';')\n        : props.error),\n    [props.error],\n  );\n  return (\n    <div\n      className={classnames(\n        { formErrorLayout: !!props.error },\n        props.className,\n      )}\n    >\n      {props.children}\n      <div className=\"tea-form-err-message\">{errMessage}</div>\n    </div>\n  );\n};\n\nexport function ShowErrorHoc<P extends any, T extends React.ComponentType<P>>(\n  Component: T,\n) {\n  const ComponentHasError = (props: P) => {\n    const { errors, ...rest } = props as P & { errors?: any };\n    return (\n      <ShowError error={errors}>\n        <Component {...(rest as any)} />\n      </ShowError>\n    );\n  };\n  return ComponentHasError as T;\n}\n\nexport default ShowError;\n"],"sourceRoot":""}